<?xml version="1.0"?>
<testsuites>
  <testsuite tests="0" failures="0" errors="0" name="Index"/>
  <testsuite tests="1" failures="0" errors="0" name="Exports Kafka">
    <testcase name="#1 should be equal"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Exports kafka util">
    <testcase name="#2 should be equal"/>
  </testsuite>
  <testsuite tests="0" failures="0" errors="0" name="Consumer test"/>
  <testsuite tests="0" failures="0" errors="0" name="Consumer test for KafkaConsumer events"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer test"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer test for KafkaProducer events"/>
  <testsuite tests="1" failures="0" errors="0" name="Protocol::parseMessage">
    <testcase name="#3 should be equivalent"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Protocol::parseMessage - no metadata">
    <testcase name="#4 should be equivalent">
      <system-out>2023-08-17T18:03:25.088Z - [31merror[39m: Invalid input params
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Protocol::parseMessage - no params">
    <testcase name="#5 should be truthy"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Protocol::parseValue">
    <testcase name="#6 should be equivalent">
      <system-out>2023-08-17T18:03:25.089Z - [33mwarn[39m: Protocol::parseMessage() - error - unable to parse message as JSON -  SyntaxError: Unexpected token o in JSON at position 1
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Protocol::parseValue - test JSON parse failure">
    <testcase name="#7 should be truthy"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Protocol::parseValue">
    <testcase name="#8 should be truthy"/>
  </testsuite>
  <testsuite tests="0" failures="0" errors="0" name="Consumer"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer"/>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::constructor">
    <testcase name="#9 Consumer instance created"/>
    <testcase name="#10 Consumer constructor called once"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer test Test Consumer::constructor - no config">
    <testcase name="#11 Consumer instance created"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::constructor - defaults">
    <testcase name="#12 Consumer instance created"/>
    <testcase name="#13 Consumer constructor called once"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer test Test Consumer::constructor - no params">
    <testcase name="#14 true"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::connect">
    <testcase name="#15 on Ready event received"/>
    <testcase name="#16 connection result received">
      <system-out>2023-08-17T18:03:25.101Z - [31merror[39m: Consumer::onError()[topics='test'] - error test test)
</system-out>
      <system-out>2023-08-17T18:03:25.101Z - [31merror[39m: error test test
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::connect - with error on callBack">
    <testcase name="#17 on Error event received"/>
    <testcase name="#18 should be truthy"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer test Test Consumer::disconnect">
    <testcase name="#19 should be equal">
      <system-out>2023-08-17T18:03:25.103Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.104Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" errors="0" name="Consumer test Test Consumer::disconnect - no callback"/>
  <testsuite tests="0" failures="0" errors="0" name="Consumer test Test Consumer::subscribe"/>
  <testsuite tests="0" failures="0" errors="0" name="Consumer test Test Consumer::subscribe - no params"/>
  <testsuite tests="3" failures="0" errors="0" name="Consumer test Test Consumer::getWatermarkOffsets">
    <testcase name="#20 connection result received"/>
    <testcase name="#21 waterMarkOffset result exists"/>
    <testcase name="#22 waterMarkOffset results match"/>
  </testsuite>
  <testsuite tests="3" failures="0" errors="0" name="Consumer test Test Consumer::getMetadata">
    <testcase name="#23 connection result received"/>
    <testcase name="#24 metadata object exists"/>
    <testcase name="#25 metadata objects match"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer test Test Consumer::getMetadata - no callback function">
    <testcase name="#26 connection result received"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::commit">
    <testcase name="#27 connection result received"/>
    <testcase name="#28 commit passed"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::commit - no params">
    <testcase name="#29 connection result received"/>
    <testcase name="#30 commit passed"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::commitSync">
    <testcase name="#31 connection result received"/>
    <testcase name="#32 commit passed"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::commitSync - no params">
    <testcase name="#33 connection result received"/>
    <testcase name="#34 commit passed"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::commitMessage">
    <testcase name="#35 connection result received"/>
    <testcase name="#36 commit passed"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::commitMessageSync">
    <testcase name="#37 connection result received"/>
    <testcase name="#38 commit passed"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::consumeOnce - Not Implemented - default params">
    <testcase name="#39 connection result received"/>
    <testcase name="#40 should be equal">
      <system-out>2023-08-17T18:03:25.118Z - [31merror[39m: Not implemented
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::consumeOnce - Not Implemented - batchSize=10">
    <testcase name="#41 connection result received"/>
    <testcase name="#42 should be equal">
      <system-out>2023-08-17T18:03:25.119Z - [31merror[39m: Not implemented
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="10" failures="0" errors="0" name="Consumer test Test Consumer::consume - defaults">
    <testcase name="#43 connection result received"/>
    <testcase name="#44 on Message event received"/>
    <testcase name="#45 on Message event received"/>
    <testcase name="#46 on Message event received"/>
    <testcase name="#47 on Message event received"/>
    <testcase name="#48 on Message event received"/>
    <testcase name="#49 on Message event received"/>
    <testcase name="#50 on Message event received"/>
    <testcase name="#51 on Message event received"/>
    <testcase name="#52 on Message event received">
      <system-out>2023-08-17T18:03:25.120Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.121Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="5" failures="0" errors="0" name="Consumer test Test Consumer::consume flow sync=false, messageAsJson=true">
    <testcase name="#53 on Ready event received"/>
    <testcase name="#54 connection result received"/>
    <testcase name="#55 on Message event received"/>
    <testcase name="#56 should be equal"/>
    <testcase name="#57 message processed">
      <system-out>2023-08-17T18:03:25.123Z - [32minfo[39m: Message Received by callback function - {"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405123}
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="5" failures="0" errors="0" name="Consumer test Test Consumer::consume flow sync=false, messageAsJson=false">
    <testcase name="#58 on Ready event received"/>
    <testcase name="#59 connection result received"/>
    <testcase name="#60 on Message event received"/>
    <testcase name="#61 should be equal"/>
    <testcase name="#62 message processed">
      <system-out>2023-08-17T18:03:25.125Z - [32minfo[39m: Message Received by callback function - {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405125}
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="5" failures="0" errors="0" name="Consumer test Test Consumer::consume flow sync=true, messageAsJson=true">
    <testcase name="#63 on Ready event received"/>
    <testcase name="#64 connection result received"/>
    <testcase name="#65 on Message event received"/>
    <testcase name="#66 message processed"/>
    <testcase name="#67 should be equal">
      <system-out>2023-08-17T18:03:25.126Z - [32minfo[39m: Message Received by callback function - {"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405126}
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="5" failures="0" errors="0" name="Consumer test Test Consumer::consume flow sync=true, messageAsJson=false">
    <testcase name="#68 on Ready event received"/>
    <testcase name="#69 connection result received"/>
    <testcase name="#70 on Message event received"/>
    <testcase name="#71 message processed"/>
    <testcase name="#72 should be equal">
      <system-out>2023-08-17T18:03:25.128Z - [32minfo[39m: Message Received by callback function - {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405128}
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="15" failures="0" errors="0" name="Consumer test Test Consumer::consume flow sync=true, messageAsJson=false with callback exception">
    <testcase name="#73 on Ready event received"/>
    <testcase name="#74 connection result received"/>
    <testcase name="#75 on Message event received"/>
    <testcase name="#76 on Message event received"/>
    <testcase name="#77 on Message event received"/>
    <testcase name="#78 on Message event received"/>
    <testcase name="#79 Message processed by the flow consumer"/>
    <testcase name="#80 Message processed by the flow to throw exception consumer"/>
    <testcase name="#81 Message processed by the flow to throw exception consumer"/>
    <testcase name="#82 Message processed by the flow consumer"/>
    <testcase name="#83 should be equal"/>
    <testcase name="#84 Error handled by throw"/>
    <testcase name="#85 should be equal"/>
    <testcase name="#86 Error handled by rejection"/>
    <testcase name="#87 All errors handled">
      <system-out>2023-08-17T18:03:25.130Z - [32minfo[39m: consume::callback[recursiveCount=1] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405129}
</system-out>
      <system-out>2023-08-17T18:03:25.130Z - [32minfo[39m: consume::callback[recursiveCount=2] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405129}
</system-out>
      <system-out>2023-08-17T18:03:25.130Z - [32minfo[39m: consume::callback[recursiveCount=3] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405130}
</system-out>
      <system-out>2023-08-17T18:03:25.130Z - [32minfo[39m: consume::callback[recursiveCount=4] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405130}
</system-out>
      <system-out>2023-08-17T18:03:25.130Z - [31merror[39m: Consumer::consume()::syncQueue.queue - error: Error: this is an error thrown
</system-out>
      <system-out>2023-08-17T18:03:25.131Z - [31merror[39m: Consumer::onError()[topics='test'] - Error: this is an error thrown
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:729:17
</system-out>
      <system-out>    at new Promise (&lt;anonymous&gt;)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:725:16
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:427:25
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:4016:13
</system-out>
      <system-out>    at Object.process (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:1679:21)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:1531:23
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:74:45
</system-out>
      <system-out>    at node:internal/process/task_queues:141:7
</system-out>
      <system-out>    at AsyncResource.runInAsyncScope (node:async_hooks:202:9))
</system-out>
      <system-out>2023-08-17T18:03:25.131Z - [31merror[39m: Consumer::consume()::syncQueue.queue - error: this is an error rejected
</system-out>
      <system-out>2023-08-17T18:03:25.131Z - [31merror[39m: Consumer::onError()[topics='test'] - this is an error rejected)
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="15" failures="0" errors="0" name="Consumer test Test Consumer::consume flow sync=false, messageAsJson=false with callback exception">
    <testcase name="#88 on Ready event received"/>
    <testcase name="#89 connection result received"/>
    <testcase name="#90 on Message event received"/>
    <testcase name="#91 Message processed by the flow consumer"/>
    <testcase name="#92 on Message event received"/>
    <testcase name="#93 Message processed by the flow to throw exception consumer"/>
    <testcase name="#94 on Message event received"/>
    <testcase name="#95 Message processed by the flow to throw exception consumer"/>
    <testcase name="#96 on Message event received"/>
    <testcase name="#97 Message processed by the flow consumer"/>
    <testcase name="#98 should be equal"/>
    <testcase name="#99 Error handled by throw"/>
    <testcase name="#100 should be equal"/>
    <testcase name="#101 Error handled by rejection"/>
    <testcase name="#102 All errors handled">
      <system-out>2023-08-17T18:03:25.133Z - [32minfo[39m: consume::callback[recursiveCount=1] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405132}
</system-out>
      <system-out>2023-08-17T18:03:25.133Z - [32minfo[39m: consume::callback[recursiveCount=2] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405133}
</system-out>
      <system-out>2023-08-17T18:03:25.133Z - [32minfo[39m: consume::callback[recursiveCount=3] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405133}
</system-out>
      <system-out>2023-08-17T18:03:25.133Z - [32minfo[39m: consume::callback[recursiveCount=4] null, {"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405133}
</system-out>
      <system-out>2023-08-17T18:03:25.133Z - [31merror[39m: Consumer::_consumerFlow() - non-sync wokDoneCb response - Error: this is an error thrown
</system-out>
      <system-out>2023-08-17T18:03:25.133Z - [31merror[39m: Consumer::onError()[topics='test'] - Error: this is an error thrown
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:832:17
</system-out>
      <system-out>    at new Promise (&lt;anonymous&gt;)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:828:16
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:646:27
</system-out>
      <system-out>    at KafkaConsumer.consume (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/KafkaStub.js:203:5)
</system-out>
      <system-out>    at Consumer._consumeFlow (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:627:20)
</system-out>
      <system-out>    at Consumer.consume (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:474:14)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:827:9
</system-out>
      <system-out>    at processTicksAndRejections (node:internal/process/task_queues:96:5))
</system-out>
      <system-out>2023-08-17T18:03:25.134Z - [31merror[39m: Consumer::_consumerFlow() - non-sync wokDoneCb response - this is an error rejected
</system-out>
      <system-out>2023-08-17T18:03:25.134Z - [31merror[39m: Consumer::onError()[topics='test'] - this is an error rejected)
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="36" failures="0" errors="0" name="Consumer test Test Consumer::consume poller sync=false, messageAsJson=true">
    <testcase name="#103 on Ready event received"/>
    <testcase name="#104 connection result received"/>
    <testcase name="#105 on Message event received"/>
    <testcase name="#106 on Message event received"/>
    <testcase name="#107 on Message event received"/>
    <testcase name="#108 on Message event received"/>
    <testcase name="#109 on Message event received"/>
    <testcase name="#110 on Message event received"/>
    <testcase name="#111 on Message event received"/>
    <testcase name="#112 on Message event received"/>
    <testcase name="#113 on Message event received"/>
    <testcase name="#114 message processed"/>
    <testcase name="#115 batch of messages received"/>
    <testcase name="#116 should be equal"/>
    <testcase name="#117 should be equal"/>
    <testcase name="#118 should be equal"/>
    <testcase name="#119 should be equal"/>
    <testcase name="#120 should be equal"/>
    <testcase name="#121 should be equal"/>
    <testcase name="#122 should be equal"/>
    <testcase name="#123 should be equal"/>
    <testcase name="#124 should be equal"/>
    <testcase name="#125 on Batch event received"/>
    <testcase name="#126 batch of messages received"/>
    <testcase name="#127 on Message event received"/>
    <testcase name="#128 on Message event received"/>
    <testcase name="#129 on Message event received"/>
    <testcase name="#130 on Message event received"/>
    <testcase name="#131 on Message event received"/>
    <testcase name="#132 on Message event received"/>
    <testcase name="#133 on Message event received"/>
    <testcase name="#134 on Message event received"/>
    <testcase name="#135 on Message event received"/>
    <testcase name="#136 Message processed once by the poller consumer"/>
    <testcase name="#137 on Batch event received"/>
    <testcase name="#138 batch of messages received">
      <system-out>2023-08-17T18:03:25.147Z - [32minfo[39m: Message Received by callback function - [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405146},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405146}]
</system-out>
      <system-out>2023-08-17T18:03:25.157Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="36" failures="0" errors="0" name="Consumer test Test Consumer::consume poller sync=false, messageAsJson=false">
    <testcase name="#139 on Ready event received"/>
    <testcase name="#140 connection result received"/>
    <testcase name="#141 on Message event received"/>
    <testcase name="#142 on Message event received"/>
    <testcase name="#143 on Message event received"/>
    <testcase name="#144 on Message event received"/>
    <testcase name="#145 on Message event received"/>
    <testcase name="#146 on Message event received"/>
    <testcase name="#147 on Message event received"/>
    <testcase name="#148 on Message event received"/>
    <testcase name="#149 on Message event received"/>
    <testcase name="#150 message processed"/>
    <testcase name="#151 batch of messages received"/>
    <testcase name="#152 should be equal"/>
    <testcase name="#153 should be equal"/>
    <testcase name="#154 should be equal"/>
    <testcase name="#155 should be equal"/>
    <testcase name="#156 should be equal"/>
    <testcase name="#157 should be equal"/>
    <testcase name="#158 should be equal"/>
    <testcase name="#159 should be equal"/>
    <testcase name="#160 should be equal"/>
    <testcase name="#161 on Batch event received"/>
    <testcase name="#162 batch of messages received"/>
    <testcase name="#163 on Message event received"/>
    <testcase name="#164 on Message event received"/>
    <testcase name="#165 on Message event received"/>
    <testcase name="#166 on Message event received"/>
    <testcase name="#167 on Message event received"/>
    <testcase name="#168 on Message event received"/>
    <testcase name="#169 on Message event received"/>
    <testcase name="#170 on Message event received"/>
    <testcase name="#171 on Message event received"/>
    <testcase name="#172 Message processed once by the poller consumer"/>
    <testcase name="#173 on Batch event received"/>
    <testcase name="#174 batch of messages received">
      <system-out>2023-08-17T18:03:25.170Z - [32minfo[39m: Message Received by callback function - [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405169},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405169}]
</system-out>
      <system-out>2023-08-17T18:03:25.180Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="32" failures="0" errors="0" name="Consumer test Test Consumer::consume poller sync=true, messageAsJson=true">
    <testcase name="#175 on Ready event received"/>
    <testcase name="#176 connection result received"/>
    <testcase name="#177 on Message event received"/>
    <testcase name="#178 on Message event received"/>
    <testcase name="#179 on Message event received"/>
    <testcase name="#180 on Message event received"/>
    <testcase name="#181 on Message event received"/>
    <testcase name="#182 on Message event received"/>
    <testcase name="#183 on Message event received"/>
    <testcase name="#184 on Message event received"/>
    <testcase name="#185 on Message event received"/>
    <testcase name="#186 message processed"/>
    <testcase name="#187 batch of messages received"/>
    <testcase name="#188 should be equal"/>
    <testcase name="#189 should be equal"/>
    <testcase name="#190 should be equal"/>
    <testcase name="#191 should be equal"/>
    <testcase name="#192 should be equal"/>
    <testcase name="#193 should be equal"/>
    <testcase name="#194 should be equal"/>
    <testcase name="#195 should be equal"/>
    <testcase name="#196 should be equal"/>
    <testcase name="#197 on Message event received"/>
    <testcase name="#198 on Message event received"/>
    <testcase name="#199 on Message event received"/>
    <testcase name="#200 on Message event received"/>
    <testcase name="#201 on Message event received"/>
    <testcase name="#202 on Message event received"/>
    <testcase name="#203 on Message event received"/>
    <testcase name="#204 on Message event received"/>
    <testcase name="#205 on Message event received"/>
    <testcase name="#206 Message processed once by the poller consumer">
      <system-out>2023-08-17T18:03:25.193Z - [32minfo[39m: Message Received by callback function - [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405192},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405192}]
</system-out>
      <system-out>2023-08-17T18:03:25.203Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="32" failures="0" errors="0" name="Consumer test Test Consumer::consume poller sync=true, messageAsJson=false">
    <testcase name="#207 on Ready event received"/>
    <testcase name="#208 connection result received"/>
    <testcase name="#209 on Message event received"/>
    <testcase name="#210 on Message event received"/>
    <testcase name="#211 on Message event received"/>
    <testcase name="#212 on Message event received"/>
    <testcase name="#213 on Message event received"/>
    <testcase name="#214 on Message event received"/>
    <testcase name="#215 on Message event received"/>
    <testcase name="#216 on Message event received"/>
    <testcase name="#217 on Message event received"/>
    <testcase name="#218 message processed"/>
    <testcase name="#219 batch of messages received"/>
    <testcase name="#220 should be equal"/>
    <testcase name="#221 should be equal"/>
    <testcase name="#222 should be equal"/>
    <testcase name="#223 should be equal"/>
    <testcase name="#224 should be equal"/>
    <testcase name="#225 should be equal"/>
    <testcase name="#226 should be equal"/>
    <testcase name="#227 should be equal"/>
    <testcase name="#228 should be equal"/>
    <testcase name="#229 on Message event received"/>
    <testcase name="#230 on Message event received"/>
    <testcase name="#231 on Message event received"/>
    <testcase name="#232 on Message event received"/>
    <testcase name="#233 on Message event received"/>
    <testcase name="#234 on Message event received"/>
    <testcase name="#235 on Message event received"/>
    <testcase name="#236 on Message event received"/>
    <testcase name="#237 on Message event received"/>
    <testcase name="#238 Message processed once by the poller consumer">
      <system-out>2023-08-17T18:03:25.216Z - [32minfo[39m: Message Received by callback function - [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405215},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405215}]
</system-out>
      <system-out>2023-08-17T18:03:25.227Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="36" failures="0" errors="0" name="Consumer test Test Consumer::consume recursive sync=false, messageAsJson=true">
    <testcase name="#239 on Ready event received"/>
    <testcase name="#240 connection result received"/>
    <testcase name="#241 on Message event received"/>
    <testcase name="#242 on Message event received"/>
    <testcase name="#243 on Message event received"/>
    <testcase name="#244 on Message event received"/>
    <testcase name="#245 on Message event received"/>
    <testcase name="#246 on Message event received"/>
    <testcase name="#247 on Message event received"/>
    <testcase name="#248 on Message event received"/>
    <testcase name="#249 on Message event received"/>
    <testcase name="#250 message processed"/>
    <testcase name="#251 batch of messages received"/>
    <testcase name="#252 should be equal"/>
    <testcase name="#253 should be equal"/>
    <testcase name="#254 should be equal"/>
    <testcase name="#255 should be equal"/>
    <testcase name="#256 should be equal"/>
    <testcase name="#257 should be equal"/>
    <testcase name="#258 should be equal"/>
    <testcase name="#259 should be equal"/>
    <testcase name="#260 should be equal"/>
    <testcase name="#261 on Message event received"/>
    <testcase name="#262 on Message event received"/>
    <testcase name="#263 on Message event received"/>
    <testcase name="#264 on Message event received"/>
    <testcase name="#265 on Message event received"/>
    <testcase name="#266 on Message event received"/>
    <testcase name="#267 on Message event received"/>
    <testcase name="#268 on Message event received"/>
    <testcase name="#269 on Message event received"/>
    <testcase name="#270 Message processed once by the recursive consumer"/>
    <testcase name="#271 on Batch event received"/>
    <testcase name="#272 batch of messages received"/>
    <testcase name="#273 on Batch event received"/>
    <testcase name="#274 batch of messages received">
      <system-out>2023-08-17T18:03:25.229Z - [32minfo[39m: Message Received by callback function - [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405228},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405228}]
</system-out>
      <system-out>2023-08-17T18:03:25.230Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="36" failures="0" errors="0" name="Consumer test Test Consumer::consume recursive sync=false, messageAsJson=false">
    <testcase name="#275 on Ready event received"/>
    <testcase name="#276 connection result received"/>
    <testcase name="#277 on Message event received"/>
    <testcase name="#278 on Message event received"/>
    <testcase name="#279 on Message event received"/>
    <testcase name="#280 on Message event received"/>
    <testcase name="#281 on Message event received"/>
    <testcase name="#282 on Message event received"/>
    <testcase name="#283 on Message event received"/>
    <testcase name="#284 on Message event received"/>
    <testcase name="#285 on Message event received"/>
    <testcase name="#286 message processed"/>
    <testcase name="#287 batch of messages received"/>
    <testcase name="#288 should be equal"/>
    <testcase name="#289 should be equal"/>
    <testcase name="#290 should be equal"/>
    <testcase name="#291 should be equal"/>
    <testcase name="#292 should be equal"/>
    <testcase name="#293 should be equal"/>
    <testcase name="#294 should be equal"/>
    <testcase name="#295 should be equal"/>
    <testcase name="#296 should be equal"/>
    <testcase name="#297 on Message event received"/>
    <testcase name="#298 on Message event received"/>
    <testcase name="#299 on Message event received"/>
    <testcase name="#300 on Message event received"/>
    <testcase name="#301 on Message event received"/>
    <testcase name="#302 on Message event received"/>
    <testcase name="#303 on Message event received"/>
    <testcase name="#304 on Message event received"/>
    <testcase name="#305 on Message event received"/>
    <testcase name="#306 Message processed once by the recursive consumer"/>
    <testcase name="#307 on Batch event received"/>
    <testcase name="#308 batch of messages received"/>
    <testcase name="#309 on Batch event received"/>
    <testcase name="#310 batch of messages received">
      <system-out>2023-08-17T18:03:25.233Z - [32minfo[39m: Message Received by callback function - [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405232},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405232}]
</system-out>
      <system-out>2023-08-17T18:03:25.235Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="32" failures="0" errors="0" name="Consumer test Test Consumer::consume recursive sync=true, messageAsJson=true">
    <testcase name="#311 on Ready event received"/>
    <testcase name="#312 connection result received"/>
    <testcase name="#313 on Message event received"/>
    <testcase name="#314 on Message event received"/>
    <testcase name="#315 on Message event received"/>
    <testcase name="#316 on Message event received"/>
    <testcase name="#317 on Message event received"/>
    <testcase name="#318 on Message event received"/>
    <testcase name="#319 on Message event received"/>
    <testcase name="#320 on Message event received"/>
    <testcase name="#321 on Message event received"/>
    <testcase name="#322 message processed"/>
    <testcase name="#323 batch of messages received"/>
    <testcase name="#324 should be equal"/>
    <testcase name="#325 should be equal"/>
    <testcase name="#326 should be equal"/>
    <testcase name="#327 should be equal"/>
    <testcase name="#328 should be equal"/>
    <testcase name="#329 should be equal"/>
    <testcase name="#330 should be equal"/>
    <testcase name="#331 should be equal"/>
    <testcase name="#332 should be equal"/>
    <testcase name="#333 on Message event received"/>
    <testcase name="#334 on Message event received"/>
    <testcase name="#335 on Message event received"/>
    <testcase name="#336 on Message event received"/>
    <testcase name="#337 on Message event received"/>
    <testcase name="#338 on Message event received"/>
    <testcase name="#339 on Message event received"/>
    <testcase name="#340 on Message event received"/>
    <testcase name="#341 on Message event received"/>
    <testcase name="#342 Message processed once by the recursive consumer">
      <system-out>2023-08-17T18:03:25.237Z - [32minfo[39m: Message Received by callback function - [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405236},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405236}]
</system-out>
      <system-out>2023-08-17T18:03:25.240Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="32" failures="0" errors="0" name="Consumer test Test Consumer::consume recursive sync=true, messageAsJson=false">
    <testcase name="#343 on Ready event received"/>
    <testcase name="#344 connection result received"/>
    <testcase name="#345 on Message event received"/>
    <testcase name="#346 on Message event received"/>
    <testcase name="#347 on Message event received"/>
    <testcase name="#348 on Message event received"/>
    <testcase name="#349 on Message event received"/>
    <testcase name="#350 on Message event received"/>
    <testcase name="#351 on Message event received"/>
    <testcase name="#352 on Message event received"/>
    <testcase name="#353 on Message event received"/>
    <testcase name="#354 message processed"/>
    <testcase name="#355 batch of messages received"/>
    <testcase name="#356 should be equal"/>
    <testcase name="#357 should be equal"/>
    <testcase name="#358 should be equal"/>
    <testcase name="#359 should be equal"/>
    <testcase name="#360 should be equal"/>
    <testcase name="#361 should be equal"/>
    <testcase name="#362 should be equal"/>
    <testcase name="#363 should be equal"/>
    <testcase name="#364 should be equal"/>
    <testcase name="#365 on Message event received"/>
    <testcase name="#366 on Message event received"/>
    <testcase name="#367 on Message event received"/>
    <testcase name="#368 on Message event received"/>
    <testcase name="#369 on Message event received"/>
    <testcase name="#370 on Message event received"/>
    <testcase name="#371 on Message event received"/>
    <testcase name="#372 on Message event received"/>
    <testcase name="#373 on Message event received"/>
    <testcase name="#374 Message processed once by the recursive consumer">
      <system-out>2023-08-17T18:03:25.242Z - [32minfo[39m: Message Received by callback function - [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405241},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405241}]
</system-out>
      <system-out>2023-08-17T18:03:25.244Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="44" failures="0" errors="0" name="Consumer test Test Consumer::consume recursive sync=true, messageAsJson=false with callback exception">
    <testcase name="#375 on Ready event received"/>
    <testcase name="#376 connection result received"/>
    <testcase name="#377 on Message event received"/>
    <testcase name="#378 on Message event received"/>
    <testcase name="#379 on Message event received"/>
    <testcase name="#380 on Message event received"/>
    <testcase name="#381 on Message event received"/>
    <testcase name="#382 on Message event received"/>
    <testcase name="#383 on Message event received"/>
    <testcase name="#384 on Message event received"/>
    <testcase name="#385 on Message event received"/>
    <testcase name="#386 on Message event received"/>
    <testcase name="#387 on Message event received"/>
    <testcase name="#388 on Message event received"/>
    <testcase name="#389 on Message event received"/>
    <testcase name="#390 on Message event received"/>
    <testcase name="#391 on Message event received"/>
    <testcase name="#392 on Message event received"/>
    <testcase name="#393 on Message event received"/>
    <testcase name="#394 on Message event received"/>
    <testcase name="#395 should be equal"/>
    <testcase name="#396 Error handled by throw"/>
    <testcase name="#397 on Message event received"/>
    <testcase name="#398 on Message event received"/>
    <testcase name="#399 on Message event received"/>
    <testcase name="#400 on Message event received"/>
    <testcase name="#401 on Message event received"/>
    <testcase name="#402 on Message event received"/>
    <testcase name="#403 on Message event received"/>
    <testcase name="#404 on Message event received"/>
    <testcase name="#405 on Message event received"/>
    <testcase name="#406 should be equal"/>
    <testcase name="#407 Error handled by rejection"/>
    <testcase name="#408 on Message event received"/>
    <testcase name="#409 on Message event received"/>
    <testcase name="#410 on Message event received"/>
    <testcase name="#411 on Message event received"/>
    <testcase name="#412 on Message event received"/>
    <testcase name="#413 on Message event received"/>
    <testcase name="#414 on Message event received"/>
    <testcase name="#415 on Message event received"/>
    <testcase name="#416 on Message event received"/>
    <testcase name="#417 Message processed by the recursive consumer"/>
    <testcase name="#418 All errors handled">
      <system-out>2023-08-17T18:03:25.245Z - [32minfo[39m: consume::callback[recursiveCount=1] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405245}]
</system-out>
      <system-out>2023-08-17T18:03:25.246Z - [32minfo[39m: consume::callback[recursiveCount=2] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405245},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405245}]
</system-out>
      <system-out>2023-08-17T18:03:25.246Z - [31merror[39m: Consumer::consume()::syncQueue.queue - error: Error: this is an error thrown
</system-out>
      <system-out>2023-08-17T18:03:25.246Z - [31merror[39m: Consumer::onError()[topics='test'] - Error: this is an error thrown
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1601:19
</system-out>
      <system-out>    at new Promise (&lt;anonymous&gt;)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1589:16
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:427:25
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:4016:13
</system-out>
      <system-out>    at Object.process (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:1679:21)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:1531:23
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:74:45
</system-out>
      <system-out>    at node:internal/process/task_queues:141:7
</system-out>
      <system-out>    at AsyncResource.runInAsyncScope (node:async_hooks:202:9))
</system-out>
      <system-out>2023-08-17T18:03:25.246Z - [31merror[39m: Consumer::consume() - error Error: this is an error thrown
</system-out>
      <system-out>2023-08-17T18:03:25.247Z - [32minfo[39m: consume::callback[recursiveCount=3] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405246},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405246}]
</system-out>
      <system-out>2023-08-17T18:03:25.247Z - [31merror[39m: Consumer::consume()::syncQueue.queue - error: this is an error rejected
</system-out>
      <system-out>2023-08-17T18:03:25.247Z - [31merror[39m: Consumer::onError()[topics='test'] - this is an error rejected)
</system-out>
      <system-out>2023-08-17T18:03:25.247Z - [31merror[39m: Consumer::consume() - error this is an error rejected
</system-out>
      <system-out>2023-08-17T18:03:25.247Z - [32minfo[39m: consume::callback[recursiveCount=4] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405247},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405247}]
</system-out>
      <system-out>2023-08-17T18:03:25.247Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="53" failures="0" errors="0" name="Consumer test Test Consumer::consume recursive sync=false, messageAsJson=false with callback exception">
    <testcase name="#419 on Ready event received"/>
    <testcase name="#420 connection result received"/>
    <testcase name="#421 on Message event received"/>
    <testcase name="#422 on Message event received"/>
    <testcase name="#423 on Message event received"/>
    <testcase name="#424 on Message event received"/>
    <testcase name="#425 on Message event received"/>
    <testcase name="#426 on Message event received"/>
    <testcase name="#427 on Message event received"/>
    <testcase name="#428 on Message event received"/>
    <testcase name="#429 on Message event received"/>
    <testcase name="#430 Message processed by the recursive consumer"/>
    <testcase name="#431 on Message event received"/>
    <testcase name="#432 on Message event received"/>
    <testcase name="#433 on Message event received"/>
    <testcase name="#434 on Message event received"/>
    <testcase name="#435 on Message event received"/>
    <testcase name="#436 on Message event received"/>
    <testcase name="#437 on Message event received"/>
    <testcase name="#438 on Message event received"/>
    <testcase name="#439 on Message event received"/>
    <testcase name="#440 on Message event received"/>
    <testcase name="#441 on Message event received"/>
    <testcase name="#442 on Message event received"/>
    <testcase name="#443 on Message event received"/>
    <testcase name="#444 on Message event received"/>
    <testcase name="#445 on Message event received"/>
    <testcase name="#446 on Message event received"/>
    <testcase name="#447 on Message event received"/>
    <testcase name="#448 on Message event received"/>
    <testcase name="#449 on Message event received"/>
    <testcase name="#450 on Message event received"/>
    <testcase name="#451 on Message event received"/>
    <testcase name="#452 on Message event received"/>
    <testcase name="#453 on Message event received"/>
    <testcase name="#454 on Message event received"/>
    <testcase name="#455 on Message event received"/>
    <testcase name="#456 on Message event received"/>
    <testcase name="#457 on Message event received"/>
    <testcase name="#458 Message processed by the recursive consumer"/>
    <testcase name="#459 on Batch event received"/>
    <testcase name="#460 batch of messages received"/>
    <testcase name="#461 on Batch event received"/>
    <testcase name="#462 batch of messages received"/>
    <testcase name="#463 on Batch event received"/>
    <testcase name="#464 batch of messages received"/>
    <testcase name="#465 on Batch event received"/>
    <testcase name="#466 batch of messages received"/>
    <testcase name="#467 should be equal"/>
    <testcase name="#468 Error handled by throw"/>
    <testcase name="#469 should be equal"/>
    <testcase name="#470 Error handled by rejection"/>
    <testcase name="#471 All errors handled">
      <system-out>2023-08-17T18:03:25.250Z - [32minfo[39m: consume::callback[recursiveCount=1] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405249},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405249}]
</system-out>
      <system-out>2023-08-17T18:03:25.250Z - [32minfo[39m: consume::callback[recursiveCount=2] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405250}]
</system-out>
      <system-out>2023-08-17T18:03:25.251Z - [32minfo[39m: consume::callback[recursiveCount=3] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405250},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405250}]
</system-out>
      <system-out>2023-08-17T18:03:25.251Z - [32minfo[39m: consume::callback[recursiveCount=4] null, [{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405251},{"value":"{\"hello\":\"world\"}","topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405251}]
</system-out>
      <system-out>2023-08-17T18:03:25.251Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.252Z - [31merror[39m: Consumer::_consumerRecursive() - non-sync wokDoneCb response - Error: this is an error thrown
</system-out>
      <system-out>2023-08-17T18:03:25.252Z - [31merror[39m: Consumer::onError()[topics='test'] - Error: this is an error thrown
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1692:19
</system-out>
      <system-out>    at new Promise (&lt;anonymous&gt;)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1679:16
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:599:27
</system-out>
      <system-out>    at KafkaConsumer.consume (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/KafkaStub.js:197:7)
</system-out>
      <system-out>    at Consumer._consumeRecursive (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:566:20)
</system-out>
      <system-out>    at Consumer.&lt;anonymous&gt; (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:464:20)
</system-out>
      <system-out>    at Consumer.emit (node:events:527:28)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:605:17
</system-out>
      <system-out>    at KafkaConsumer.consume (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/KafkaStub.js:197:7))
</system-out>
      <system-out>2023-08-17T18:03:25.252Z - [31merror[39m: Consumer::_consumerRecursive() - non-sync wokDoneCb response - this is an error rejected
</system-out>
      <system-out>2023-08-17T18:03:25.252Z - [31merror[39m: Consumer::onError()[topics='test'] - this is an error rejected)
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::consume poller sync=false, messageAsJson=true, batchSize=0">
    <testcase name="#472 connection result received"/>
    <testcase name="#473 should be equal">
      <system-out>2023-08-17T18:03:25.254Z - [31merror[39m: batchSize option is not valid - Select an integer greater then 0
</system-out>
      <system-out>2023-08-17T18:03:25.254Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="8" failures="0" errors="0" name="Consumer test Test Consumer::consume poller sync=false, messageAsJson=true, batchSize=0 with Callback exception">
    <testcase name="#474 connection result received"/>
    <testcase name="#475 Message processed by the recursive consumer"/>
    <testcase name="#476 should be equal"/>
    <testcase name="#477 Error handled by throw"/>
    <testcase name="#478 should be equal"/>
    <testcase name="#479 Error handled by rejection"/>
    <testcase name="#480 Message processed by the recursive consumer"/>
    <testcase name="#481 All errors handled">
      <system-out>2023-08-17T18:03:25.265Z - [32minfo[39m: consume::callback[recursiveCount=1] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405265},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405265}]
</system-out>
      <system-out>2023-08-17T18:03:25.277Z - [32minfo[39m: consume::callback[recursiveCount=2] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405276},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405276}]
</system-out>
      <system-out>2023-08-17T18:03:25.277Z - [31merror[39m: Consumer::_consumePoller() - non-sync wokDoneCb response - Error: this is an error thrown
</system-out>
      <system-out>2023-08-17T18:03:25.277Z - [31merror[39m: Consumer::onError()[topics='test'] - Error: this is an error thrown
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1802:19
</system-out>
      <system-out>    at new Promise (&lt;anonymous&gt;)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1789:16
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:529:29
</system-out>
      <system-out>    at KafkaConsumer.consume (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/KafkaStub.js:197:7)
</system-out>
      <system-out>    at Timeout._onTimeout (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:501:22)
</system-out>
      <system-out>    at listOnTimeout (node:internal/timers:559:17)
</system-out>
      <system-out>    at processTimers (node:internal/timers:502:7))
</system-out>
      <system-out>2023-08-17T18:03:25.286Z - [32minfo[39m: consume::callback[recursiveCount=3] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405286},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405286}]
</system-out>
      <system-out>2023-08-17T18:03:25.286Z - [31merror[39m: Consumer::_consumePoller() - non-sync wokDoneCb response - this is an error rejected
</system-out>
      <system-out>2023-08-17T18:03:25.286Z - [31merror[39m: Consumer::onError()[topics='test'] - this is an error rejected)
</system-out>
      <system-out>2023-08-17T18:03:25.296Z - [32minfo[39m: consume::callback[recursiveCount=4] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405296},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405296}]
</system-out>
      <system-out>2023-08-17T18:03:25.296Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="26" failures="0" errors="0" name="Consumer test Test Consumer::consume poller sync=true, messageAsJson=true, batchSize=0 with Callback exception">
    <testcase name="#482 connection result received"/>
    <testcase name="#483 Message processed by the recursive consumer"/>
    <testcase name="#484 should be equal"/>
    <testcase name="#485 Error handled by throw"/>
    <testcase name="#486 should be equal"/>
    <testcase name="#487 Error handled by rejection"/>
    <testcase name="#488 on Message event received"/>
    <testcase name="#489 on Message event received"/>
    <testcase name="#490 on Message event received"/>
    <testcase name="#491 on Message event received"/>
    <testcase name="#492 on Message event received"/>
    <testcase name="#493 on Message event received"/>
    <testcase name="#494 on Message event received"/>
    <testcase name="#495 on Message event received"/>
    <testcase name="#496 on Message event received"/>
    <testcase name="#497 Message processed by the recursive consumer"/>
    <testcase name="#498 All errors handled"/>
    <testcase name="#499 on Message event received"/>
    <testcase name="#500 on Message event received"/>
    <testcase name="#501 on Message event received"/>
    <testcase name="#502 on Message event received"/>
    <testcase name="#503 on Message event received"/>
    <testcase name="#504 on Message event received"/>
    <testcase name="#505 on Message event received"/>
    <testcase name="#506 on Message event received"/>
    <testcase name="#507 on Message event received">
      <system-out>2023-08-17T18:03:25.309Z - [32minfo[39m: consume::callback[recursiveCount=1] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405309},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405309}]
</system-out>
      <system-out>2023-08-17T18:03:25.319Z - [32minfo[39m: consume::callback[recursiveCount=2] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405319},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405319}]
</system-out>
      <system-out>2023-08-17T18:03:25.319Z - [31merror[39m: Consumer::consume()::syncQueue.queue - error: Error: this is an error thrown
</system-out>
      <system-out>2023-08-17T18:03:25.319Z - [31merror[39m: Consumer::onError()[topics='test'] - Error: this is an error thrown
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1877:19
</system-out>
      <system-out>    at new Promise (&lt;anonymous&gt;)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/kafka/consumer.test.js:1864:16
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/src/kafka/consumer.js:427:25
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:4016:13
</system-out>
      <system-out>    at Object.process (/Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:1679:21)
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:1531:23
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/node_modules/async/dist/async.js:74:45
</system-out>
      <system-out>    at node:internal/process/task_queues:141:7
</system-out>
      <system-out>    at AsyncResource.runInAsyncScope (node:async_hooks:202:9))
</system-out>
      <system-out>2023-08-17T18:03:25.330Z - [32minfo[39m: consume::callback[recursiveCount=3] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405329},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405329}]
</system-out>
      <system-out>2023-08-17T18:03:25.330Z - [31merror[39m: Consumer::consume()::syncQueue.queue - error: this is an error rejected
</system-out>
      <system-out>2023-08-17T18:03:25.330Z - [31merror[39m: Consumer::onError()[topics='test'] - this is an error rejected)
</system-out>
      <system-out>2023-08-17T18:03:25.339Z - [32minfo[39m: consume::callback[recursiveCount=4] null, [{"value":{"hello":"world"},"topic":"test","partition":0,"offset":0,"key":0,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":1,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":2,"key":2,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":3,"key":3,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":4,"key":4,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":5,"key":5,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":6,"key":6,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":7,"key":7,"size":17,"timestamp":1692295405339},{"value":{"hello":"world"},"topic":"test","partition":0,"offset":9,"key":9,"size":17,"timestamp":1692295405339}]
</system-out>
      <system-out>2023-08-17T18:03:25.339Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer test Test Consumer::consume recursive sync=false, messageAsJson=true, batchSize=0">
    <testcase name="#508 connection result received"/>
    <testcase name="#509 should be equal">
      <system-out>2023-08-17T18:03:25.340Z - [31merror[39m: batchSize option is not valid - Select an integer greater then 0
</system-out>
      <system-out>2023-08-17T18:03:25.341Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="14" failures="0" errors="0" name="Consumer test Test Consumer::consume flow sync=false, messageAsJson=true - invalid CONSUMER MODE SELECTED">
    <testcase name="#510 on Ready event received"/>
    <testcase name="#511 connection result received"/>
    <testcase name="#512 on Message event received"/>
    <testcase name="#513 should be equal"/>
    <testcase name="#514 message processed"/>
    <testcase name="#515 on Message event received"/>
    <testcase name="#516 on Message event received"/>
    <testcase name="#517 on Message event received"/>
    <testcase name="#518 on Message event received"/>
    <testcase name="#519 on Message event received"/>
    <testcase name="#520 on Message event received"/>
    <testcase name="#521 on Message event received"/>
    <testcase name="#522 on Message event received"/>
    <testcase name="#523 on Message event received">
      <system-out>2023-08-17T18:03:25.342Z - [32minfo[39m: Message Received by callback function - {"value":{"hello":"world"},"topic":"test","partition":0,"offset":1,"key":"key","size":17,"timestamp":1692295405342}
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="7" failures="0" errors="0" name="Consumer test for KafkaConsumer events Test Consumer::connect - test KafkaConsumer events: event.log, event.error, error">
    <testcase name="#524 on Ready event received"/>
    <testcase name="#525 on Error event received"/>
    <testcase name="#526 on Error event received"/>
    <testcase name="#527 event.throttle"/>
    <testcase name="#528 partition.eof"/>
    <testcase name="#529 connection result received"/>
    <testcase name="#530 disconnected">
      <system-out>2023-08-17T18:03:25.343Z - [31merror[39m: Consumer::onError()[topics='test'] - event.error)
</system-out>
      <system-out>2023-08-17T18:03:25.343Z - [31merror[39m: event.error
</system-out>
      <system-out>2023-08-17T18:03:25.343Z - [31merror[39m: Consumer::onError()[topics='test'] - error)
</system-out>
      <system-out>2023-08-17T18:03:25.343Z - [31merror[39m: error
</system-out>
      <system-out>2023-08-17T18:03:25.343Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="35" failures="0" errors="0" name="Consumer test for KafkaConsumer events Test Consumer::connect - test KafkaConsumer events: event.log, event.error, error, stats enabled">
    <testcase name="#531 on Ready event received"/>
    <testcase name="#532 on Error event received"/>
    <testcase name="#533 on Error event received"/>
    <testcase name="#534 event.throttle"/>
    <testcase name="#535 event.stats"/>
    <testcase name="#536 partition.eof"/>
    <testcase name="#537 connection result received"/>
    <testcase name="#538 disconnected"/>
    <testcase name="#539 on Message event received"/>
    <testcase name="#540 on Message event received"/>
    <testcase name="#541 on Message event received"/>
    <testcase name="#542 on Message event received"/>
    <testcase name="#543 on Message event received"/>
    <testcase name="#544 on Message event received"/>
    <testcase name="#545 on Message event received"/>
    <testcase name="#546 on Message event received"/>
    <testcase name="#547 on Message event received"/>
    <testcase name="#548 on Message event received"/>
    <testcase name="#549 on Message event received"/>
    <testcase name="#550 on Message event received"/>
    <testcase name="#551 on Message event received"/>
    <testcase name="#552 on Message event received"/>
    <testcase name="#553 on Message event received"/>
    <testcase name="#554 on Message event received"/>
    <testcase name="#555 on Message event received"/>
    <testcase name="#556 on Message event received"/>
    <testcase name="#557 on Message event received"/>
    <testcase name="#558 on Message event received"/>
    <testcase name="#559 on Message event received"/>
    <testcase name="#560 on Message event received"/>
    <testcase name="#561 on Message event received"/>
    <testcase name="#562 on Message event received"/>
    <testcase name="#563 on Message event received"/>
    <testcase name="#564 on Message event received"/>
    <testcase name="#565 on Message event received">
      <system-out>2023-08-17T18:03:25.344Z - [31merror[39m: Consumer::onError()[topics='test'] - event.error)
</system-out>
      <system-out>2023-08-17T18:03:25.344Z - [31merror[39m: event.error
</system-out>
      <system-out>2023-08-17T18:03:25.344Z - [31merror[39m: Consumer::onError()[topics='test'] - error)
</system-out>
      <system-out>2023-08-17T18:03:25.344Z - [31merror[39m: error
</system-out>
      <system-out>2023-08-17T18:03:25.344Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer test Test Producer::constructor">
    <testcase name="#566 Producer instance created"/>
    <testcase name="#567 Producer constructor called once"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer test Test Producer::constructor - defaults">
    <testcase name="#568 Producer instance created"/>
    <testcase name="#569 Producer constructor called once"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer test Test Producer::constructor null">
    <testcase name="#570 Producer instance created"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer test Test Producer::constructor null">
    <testcase name="#571 Producer instance created">
      <system-out>2023-08-17T18:03:25.350Z - [31merror[39m: error test test
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="20" failures="0" errors="0" name="Producer test Test Producer::connect - with error on callBack">
    <testcase name="#572 on Error event received"/>
    <testcase name="#573 should be truthy"/>
    <testcase name="#574 on Message event received"/>
    <testcase name="#575 on Message event received"/>
    <testcase name="#576 on Message event received"/>
    <testcase name="#577 on Message event received"/>
    <testcase name="#578 on Message event received"/>
    <testcase name="#579 on Message event received"/>
    <testcase name="#580 on Message event received"/>
    <testcase name="#581 on Message event received"/>
    <testcase name="#582 on Message event received"/>
    <testcase name="#583 on Message event received"/>
    <testcase name="#584 on Message event received"/>
    <testcase name="#585 on Message event received"/>
    <testcase name="#586 on Message event received"/>
    <testcase name="#587 on Message event received"/>
    <testcase name="#588 on Message event received"/>
    <testcase name="#589 on Message event received"/>
    <testcase name="#590 on Message event received"/>
    <testcase name="#591 on Message event received">
      <system-out>2023-08-17T18:03:25.354Z - [32minfo[39m: onReady: true
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer test Test Producer::connect">
    <testcase name="#592 on Ready event received"/>
    <testcase name="#593 connection result received">
      <system-out>2023-08-17T18:03:25.354Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer test Test Producer::disconnect">
    <testcase name="#594 should be equal">
      <system-out>2023-08-17T18:03:25.355Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer test Test Producer::disconnect">
    <testcase name="#595 should be truthy">
      <system-out>2023-08-17T18:03:25.357Z - [32minfo[39m: onReady: true
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="3" failures="0" errors="0" name="Producer test Test Producer::sendMessage">
    <testcase name="#596 on Ready event received"/>
    <testcase name="#597 connection result received"/>
    <testcase name="#598 should be equal">
      <system-out>2023-08-17T18:03:25.358Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:25.395Z - [32minfo[39m: onReady: {"name":"default-client#producer-1"}
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="3" failures="0" errors="0" name="Producer test Test sync Producer::sendMessage">
    <testcase name="#599 on Ready event received"/>
    <testcase name="#600 connection result received"/>
    <testcase name="#601 should be equal">
      <system-out>2023-08-17T18:03:26.393Z - [33mwarn[39m: disconnected.
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer test Test Producer::sendMessage producer null">
    <testcase name="#602 You must call and await .connect() before trying to produce messages."/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer test Test Producer::sendMessage producer null">
    <testcase name="#603 You must call and await .connect() before trying to produce messages."/>
  </testsuite>
  <testsuite tests="3" failures="0" errors="0" name="Producer test Test Producer::getMetadata">
    <testcase name="#604 connection result received"/>
    <testcase name="#605 metadata object exists"/>
    <testcase name="#606 metadata objects match"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer test Test Producer::getMetadata - no callback function">
    <testcase name="#607 connection result received">
      <system-out>2023-08-17T18:03:26.399Z - [32minfo[39m: onReady: true
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="7" failures="0" errors="0" name="Producer test for KafkaProducer events Test Producer::connect - test KafkaProducer events: event.log, event.error, error, deliver-report">
    <testcase name="#608 on Ready event received"/>
    <testcase name="#609 on Error event received"/>
    <testcase name="#610 on Error event received"/>
    <testcase name="#611 event.throttle"/>
    <testcase name="#612 delivery-report"/>
    <testcase name="#613 connection result received"/>
    <testcase name="#614 disconnected">
      <system-out>2023-08-17T18:03:26.399Z - [32minfo[39m: onError: event.error
</system-out>
      <system-out>2023-08-17T18:03:26.399Z - [32minfo[39m: onError: error
</system-out>
      <system-out>2023-08-17T18:03:26.399Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:26.400Z - [32minfo[39m: onReady: true
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="8" failures="0" errors="0" name="Producer test for KafkaProducer events Test Producer::connect - test KafkaProducer events: event.log, event.error, error, deliver-report, stats enabled">
    <testcase name="#615 on Ready event received"/>
    <testcase name="#616 on Error event received"/>
    <testcase name="#617 on Error event received"/>
    <testcase name="#618 event.throttle"/>
    <testcase name="#619 event.stats"/>
    <testcase name="#620 delivery-report"/>
    <testcase name="#621 connection result received"/>
    <testcase name="#622 disconnected">
      <system-out>2023-08-17T18:03:26.400Z - [32minfo[39m: onError: event.error
</system-out>
      <system-out>2023-08-17T18:03:26.400Z - [32minfo[39m: onError: error
</system-out>
      <system-out>2023-08-17T18:03:26.401Z - [33mwarn[39m: disconnected.
</system-out>
      <system-out>2023-08-17T18:03:26.425Z - [33mwarn[39m: CreateHandler::connect - error: Error
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" errors="0" name="Consumer createHandler should"/>
  <testsuite tests="0" failures="0" errors="0" name="Consumer getListOfTopics should"/>
  <testsuite tests="0" failures="0" errors="0" name="Consumer getConsumer should"/>
  <testsuite tests="0" failures="0" errors="0" name="Consumer isConsumerAutoCommitEnabled should"/>
  <testsuite tests="0" failures="0" errors="0" name="Consumer isConnected should"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer produceMessage should"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer getProducer should"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer disconnect should"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer produceMessage failure should"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer isConnected should"/>
  <testsuite tests="0" failures="0" errors="0" name="Producer connectAll should"/>
  <testsuite tests="1" failures="0" errors="0" name="Consumer createHandler should topic is still added if fails to connect">
    <testcase name="#623 Topic should still be in list even if consumer failed to connect."/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer createHandler should array topic">
    <testcase name="#624 passed">
      <system-out>2023-08-17T18:03:26.433Z - [33mwarn[39m: CreateHandler::connect - error: Error
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer createHandler should should have a timestamp of 0 if couldn't connect">
    <testcase name="#625 Timestamps should be 0"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer createHandler should should contain a timestamp of when it connected">
    <testcase name="#626 Timestamp should be greater than 0"/>
    <testcase name="#627 Timestamp should be greater than 0"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer createHandler should should contain a timestamp of when it connected">
    <testcase name="#628 Timestamp should be greater than 0"/>
    <testcase name="#629 Timestamp should be greater than 0"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer getListOfTopics should return an empty array when there are no topics">
    <testcase name="#630 Should return an empty array"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer getListOfTopics should return a list of topics">
    <testcase name="#631 Should return an empty array"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer getConsumer should return list of consumers">
    <testcase name="#632 should be equal"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer getConsumer should throw error">
    <testcase name="#633 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer isConsumerAutoCommitEnabled should return consumer auto commit status">
    <testcase name="#634 auto commit is disabled"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer isConsumerAutoCommitEnabled should throw error">
    <testcase name="#635 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer isConnected should reject with an error if client.getMetadata fails">
    <testcase name="#636 Error message does not match"/>
    <testcase name="#637 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer isConnected should reject with an error if client.getMetadata passes, but metadata is mising topic">
    <testcase name="#638 Error message does not match"/>
    <testcase name="#639 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Consumer isConnected should reject with an error if consumer does not exist">
    <testcase name="#640 Error message does not match"/>
    <testcase name="#641 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Consumer isConnected should pass if the topic can be found">
    <testcase name="#642 isConnected should return true"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer produceMessage should return true">
    <testcase name="#643 should be equal"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer produceMessage should disconnect specific topic correctly">
    <testcase name="#644 Disconnect specific topic successfully"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer produceMessage should disconnect all topics correctly">
    <testcase name="#645 Disconnected all topics successfully"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer getProducer should fetch a specific Producers">
    <testcase name="#646 should be truthy"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer getProducer should throw an exception for a specific Producers not found">
    <testcase name="#647 should be truthy"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer disconnect should disconnect from kafka">
    <testcase name="#648 should be truthy"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer disconnect should disconnect specific topic correctly">
    <testcase name="#649 should be truthy"/>
    <testcase name="#650 Disconnect specific topic successfully"/>
  </testsuite>
  <testsuite tests="3" failures="0" errors="0" name="Producer disconnect should disconnect all topics correctly">
    <testcase name="#651 should be truthy"/>
    <testcase name="#652 should be truthy"/>
    <testcase name="#653 Disconnected all topics successfully"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer disconnect should throw error if failure to disconnect from kafka when disconnecting all Producers">
    <testcase name="#654 should be truthy"/>
    <testcase name="#655 should be truthy">
      <system-out>2023-08-17T18:03:26.485Z - [31merror[39m: uncaughtException: getProducerStub.restore is not a function
</system-out>
      <system-out>TypeError: getProducerStub.restore is not a function
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/util/producer.test.js:271:23
</system-out>
      <system-out>    at processTicksAndRejections (node:internal/process/task_queues:96:5)
</system-out>
      <system-out>2023-08-17T18:03:26.485Z - [31merror[39m: uncaughtException: getProducerStub.restore is not a function
</system-out>
      <system-out>TypeError: getProducerStub.restore is not a function
</system-out>
      <system-out>    at /Users/mdebarros/Documents/work/projects/mojaloop/git/central-services-stream/test/unit/util/producer.test.js:271:23
</system-out>
      <system-out>    at processTicksAndRejections (node:internal/process/task_queues:96:5)
</system-out>
      <system-out>2023-08-17T18:03:26.486Z - [31merror[39m: No producer found for topic undefined
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer disconnect should throw error if failure to disconnect from kafka if topic does not exist">
    <testcase name="#656 should be truthy"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer disconnect should throw error when a non-string value is passed into disconnect">
    <testcase name="#657 Error Thrown">
      <system-out>2023-08-17T18:03:26.488Z - [31merror[39m: Error
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer produceMessage failure should throw error when connect throws error">
    <testcase name="#658 Error thrown"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer isConnected should reject with an error if client.getMetadata fails">
    <testcase name="#659 Error message does not match"/>
    <testcase name="#660 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer isConnected should reject with an error if client.getMetadata passes, but metadata is missing topic">
    <testcase name="#661 Error message does not match"/>
    <testcase name="#662 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="2" failures="0" errors="0" name="Producer isConnected should reject with an error if consumer does not exist">
    <testcase name="#663 Error message does not match"/>
    <testcase name="#664 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer isConnected should pass if the topic can be found">
    <testcase name="#665 isConnected should return true"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer isConnected should pass if the topicName is not supplied">
    <testcase name="#666 isConnected should return true"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer connectAll should register all producers but not ones that are already registered">
    <testcase name="#667 (unnamed assert)"/>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer connectAll should register all producers for the supplied config">
    <testcase name="#668 (unnamed assert)">
      <system-out>2023-08-17T18:03:26.507Z - [31merror[39m: Producer is not a constructor
</system-out>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" errors="0" name="Producer connectAll should Log errors but not cancel the process">
    <testcase name="#669 Cannot read properties of undefined (reading 'topicName')"/>
  </testsuite>
</testsuites>
